{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"/Users/pupmega/codefellows/onewiththeplants/components/Game.js\",\n    _this3 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nvar newGameState = {\n  squares: Array(9).fill(null),\n  xIsNext: true\n};\n\nvar Game = function (_React$Component) {\n  _inherits(Game, _React$Component);\n\n  var _super = _createSuper(Game);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _super.call(this, props);\n    _this.state = newGameState;\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"whoseTurn\",\n    value: function whoseTurn() {\n      return this.state.xIsNext ? 'X' : 'O';\n    }\n  }, {\n    key: \"onNewGame\",\n    value: function onNewGame() {\n      this.setState(newGameState);\n    }\n  }, {\n    key: \"onMove\",\n    value: function onMove(i) {\n      var newSquares = this.state.squares.slice();\n      var turn = this.whoseTurn();\n      if (this.state.squares[i] || winner(this.state.squares)) return null;\n      newSquares[i] = turn;\n      this.setState({\n        squares: newSquares,\n        xIsNext: !this.state.xIsNext\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var style = {\n        backgroundColor: 'transparent',\n        flex: 1,\n        alignItems: 'center'\n      };\n      return React.createElement(SafeAreaView, {\n        style: style\n      }, React.createElement(Board, {\n        squares: this.state.squares,\n        onMove: function onMove(i) {\n          return _this2.onMove(i);\n        }\n      }), React.createElement(Status, {\n        turn: this.whoseTurn(),\n        winner: winner(this.state.squares),\n        onNewGame: function onNewGame() {\n          return _this2.onNewGame();\n        }\n      }));\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nexport { Game as default };\n\nvar Board = function Board(_ref) {\n  var squares = _ref.squares,\n      onMove = _ref.onMove;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center'\n    }\n  }, React.createElement(Row, {\n    squares: squares,\n    startIndex: 0,\n    onMove: onMove\n  }), React.createElement(Row, {\n    squares: squares,\n    startIndex: 3,\n    onMove: onMove\n  }), React.createElement(Row, {\n    squares: squares,\n    startIndex: 6,\n    onMove: onMove\n  }));\n};\n\nvar Row = function Row(_ref2) {\n  var squares = _ref2.squares,\n      startIndex = _ref2.startIndex,\n      onMove = _ref2.onMove;\n  return React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    }\n  }, React.createElement(Square, {\n    label: squares[startIndex],\n    onPress: function onPress() {\n      return onMove(startIndex);\n    }\n  }), React.createElement(Square, {\n    label: squares[startIndex + 1],\n    onPress: function onPress() {\n      return onMove(startIndex + 1);\n    }\n  }), React.createElement(Square, {\n    label: squares[startIndex + 2],\n    onPress: function onPress() {\n      return onMove(startIndex + 2);\n    }\n  }));\n};\n\nvar Square = function Square(_ref3) {\n  var label = _ref3.label,\n      onPress = _ref3.onPress;\n  var style = {\n    width: 100,\n    height: 100,\n    borderColor: 'black',\n    borderWidth: 1,\n    justifyContent: 'center'\n  };\n  var textStyle = {\n    textAlign: 'center',\n    fontSize: 36,\n    fontWeight: 'bold'\n  };\n  return React.createElement(TouchableHighlight, {\n    style: style,\n    onPress: onPress\n  }, React.createElement(Text, {\n    style: textStyle\n  }, label));\n};\n\nvar Status = function Status(_ref4) {\n  var turn = _ref4.turn,\n      winner = _ref4.winner,\n      onNewGame = _ref4.onNewGame;\n  var text = winner === null ? 'Tie game :-/' : winner !== undefined ? winner + ' wins! You get $xx plant cash!' : turn + \"'s turn\";\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 36,\n      textAlign: 'center'\n    }\n  }, text), React.createElement(Button, {\n    title: \"Start new game\",\n    onPress: onNewGame\n  }));\n};\n\nvar winner = function winner(squares) {\n  var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (var i = 0; i < lines.length; i++) {\n    var _lines$i = _slicedToArray(lines[i], 3),\n        a = _lines$i[0],\n        b = _lines$i[1],\n        c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  if (squares.indexOf(null) === -1) return null;\n  return undefined;\n};","map":{"version":3,"sources":["/Users/pupmega/codefellows/onewiththeplants/components/Game.js"],"names":["React","newGameState","squares","Array","fill","xIsNext","Game","props","state","setState","i","newSquares","slice","turn","whoseTurn","winner","style","backgroundColor","flex","alignItems","onMove","onNewGame","Component","Board","justifyContent","Row","startIndex","flexDirection","Square","label","onPress","width","height","borderColor","borderWidth","textStyle","textAlign","fontSize","fontWeight","Status","text","undefined","lines","length","a","b","c","indexOf"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, SafeAreaView, Text, TouchableHighlight, View } from 'react-native'\n\nconst newGameState = {\n  squares: Array(9).fill(null),\n  xIsNext: true,\n}\n\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = newGameState\n  }\n\n  whoseTurn() {\n    return this.state.xIsNext ? 'X' : 'O'\n  }\n\n  onNewGame() {\n    this.setState(newGameState)\n  }\n\n  onMove(i) {\n    let newSquares = this.state.squares.slice()\n    const turn = this.whoseTurn()\n    if (this.state.squares[i] || winner(this.state.squares)) return null\n    newSquares[i] = turn\n    this.setState({\n      squares: newSquares,\n      xIsNext: !this.state.xIsNext,\n    })\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'transparent',\n      flex: 1,\n      alignItems: 'center',\n    }\n\n    return (\n      <SafeAreaView style={style}>\n        \n        <Board squares={this.state.squares} onMove={(i) => this.onMove(i)} />\n        <Status turn={this.whoseTurn()} winner={winner(this.state.squares)} onNewGame={() => this.onNewGame()} />\n      </SafeAreaView>\n    )\n  }\n\n  \n}\n\nconst Board = ({squares, onMove}) => {\n  return (\n    <View style={{flex: 1, justifyContent: 'center'}}>\n      <Row squares={squares} startIndex={0} onMove={onMove} />\n      <Row squares={squares} startIndex={3} onMove={onMove} />\n      <Row squares={squares} startIndex={6} onMove={onMove} />\n    </View>\n  )\n}\n\nconst Row = ({squares, startIndex, onMove}) => {\n  return (\n    <View style={{flexDirection: 'row'}}>\n      <Square label={squares[startIndex    ]} onPress={() => onMove(startIndex    )} />\n      <Square label={squares[startIndex + 1]} onPress={() => onMove(startIndex + 1)} />\n      <Square label={squares[startIndex + 2]} onPress={() => onMove(startIndex + 2)} />\n    </View>\n  )\n}\n\nconst Square = ({label, onPress}) => {\n  const style = {\n    width: 100,\n    height: 100,\n    borderColor: 'black',\n    borderWidth: 1,\n    justifyContent: 'center',\n  }\n\n  const textStyle = {\n    textAlign: 'center',\n    fontSize: 36,\n    fontWeight: 'bold',\n  }\n\n  return (\n    <TouchableHighlight style={style} onPress={onPress}>\n      <Text style={textStyle}>{label}</Text>\n    </TouchableHighlight>\n  )\n}\n\nconst Status = ({turn, winner, onNewGame}) => {\n  const text = winner === null ? 'Tie game :-/'\n        : winner !== undefined ? winner + ' wins! You get $xx plant cash!'\n        : turn + \"'s turn\"\n\n  return (\n    <View style={{flex: 1}}>\n      <Text style={{fontSize: 36, textAlign: 'center'}}>{text}</Text>\n      <Button title='Start new game' onPress={onNewGame} />\n    </View>\n  )\n}\n\nconst winner = squares => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ]\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i]\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a]\n    }\n  }\n  if (squares.indexOf(null) === -1) return null // tie game\n  return undefined\n}\n"]},"metadata":{},"sourceType":"module"}
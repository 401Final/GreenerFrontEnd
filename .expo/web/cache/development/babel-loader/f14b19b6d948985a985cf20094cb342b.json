{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/pupmega/codefellows/onewiththeplants/screens/Settings.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Slider from \"react-native-slider\";\nimport { Divider, Button, Block, Text, Switch } from \"../components\";\nimport { theme, mocks } from \"../constants\";\n\nvar Settings = function (_Component) {\n  _inherits(Settings, _Component);\n\n  var _super = _createSuper(Settings);\n\n  function Settings() {\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      budget: 850,\n      monthly: 1700,\n      notifications: true,\n      newsletter: false,\n      editing: null,\n      profile: {}\n    };\n    return _this;\n  }\n\n  _createClass(Settings, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        profile: this.props.profile\n      });\n    }\n  }, {\n    key: \"handleEdit\",\n    value: function handleEdit(name, text) {\n      var profile = this.state.profile;\n      profile[name] = text;\n      this.setState({\n        profile: profile\n      });\n    }\n  }, {\n    key: \"toggleEdit\",\n    value: function toggleEdit(name) {\n      var editing = this.state.editing;\n      this.setState({\n        editing: !editing ? name : null\n      });\n    }\n  }, {\n    key: \"renderEdit\",\n    value: function renderEdit(name) {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          profile = _this$state.profile,\n          editing = _this$state.editing;\n\n      if (editing === name) {\n        return React.createElement(TextInput, {\n          defaultValue: profile[name],\n          onChangeText: function onChangeText(text) {\n            return _this2.handleEdit([name], text);\n          }\n        });\n      }\n\n      return React.createElement(Text, {\n        bold: true\n      }, profile[name]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          profile = _this$state2.profile,\n          editing = _this$state2.editing;\n      return React.createElement(Block, null, React.createElement(Block, {\n        flex: false,\n        row: true,\n        center: true,\n        space: \"between\",\n        style: styles.header\n      }, React.createElement(Text, {\n        h1: true,\n        bold: true\n      }, \"Settings\"), React.createElement(Button, null, React.createElement(Image, {\n        source: profile.avatar,\n        style: styles.avatar\n      }))), React.createElement(ScrollView, {\n        showsVerticalScrollIndicator: false\n      }, React.createElement(Block, {\n        style: styles.inputs\n      }, React.createElement(Block, {\n        row: true,\n        space: \"between\",\n        margin: [10, 0],\n        style: styles.inputRow\n      }, React.createElement(Block, null, React.createElement(Text, {\n        gray2: true,\n        style: {\n          marginBottom: 10\n        }\n      }, \"Username\"), this.renderEdit(\"username\")), React.createElement(Text, {\n        medium: true,\n        secondary: true,\n        onPress: function onPress() {\n          return _this3.toggleEdit(\"username\");\n        }\n      }, editing === \"username\" ? \"Save\" : \"Edit\")), React.createElement(Block, {\n        row: true,\n        space: \"between\",\n        margin: [10, 0],\n        style: styles.inputRow\n      }, React.createElement(Block, null, React.createElement(Text, {\n        gray2: true,\n        style: {\n          marginBottom: 10\n        }\n      }, \"Location\"), this.renderEdit(\"location\")), React.createElement(Text, {\n        medium: true,\n        secondary: true,\n        onPress: function onPress() {\n          return _this3.toggleEdit(\"location\");\n        }\n      }, editing === \"location\" ? \"Save\" : \"Edit\")), React.createElement(Block, {\n        row: true,\n        space: \"between\",\n        margin: [10, 0],\n        style: styles.inputRow\n      }, React.createElement(Block, null, React.createElement(Text, {\n        gray2: true,\n        style: {\n          marginBottom: 10\n        }\n      }, \"E-mail\"), React.createElement(Text, {\n        bold: true\n      }, profile.email)))), React.createElement(Divider, {\n        margin: [theme.sizes.base, theme.sizes.base * 2]\n      }), React.createElement(Block, {\n        style: styles.sliders\n      }, React.createElement(Block, null, React.createElement(Text, {\n        gray2: true\n      }, \"Plants\"), React.createElement(Text, {\n        caption: true,\n        gray2: true,\n        right: true\n      }, profile.plants)), React.createElement(Block, null, React.createElement(Text, {\n        gray2: true,\n        style: {\n          marginBottom: 10\n        }\n      }, \"Plant Cash\"), React.createElement(Text, {\n        bold: true\n      }, \"$\", profile.funds))), React.createElement(Divider, null), React.createElement(Block, {\n        style: styles.toggles\n      }, React.createElement(Block, {\n        row: true,\n        center: true,\n        space: \"between\",\n        style: {\n          marginBottom: theme.sizes.base * 2\n        }\n      }, React.createElement(Text, {\n        gray2: true\n      }, \"Notifications\"), React.createElement(Switch, {\n        value: this.state.notifications,\n        onValueChange: function onValueChange(value) {\n          return _this3.setState({\n            notifications: value\n          });\n        }\n      })), React.createElement(Block, {\n        row: true,\n        center: true,\n        space: \"between\",\n        style: {\n          marginBottom: theme.sizes.base * 2\n        }\n      }, React.createElement(Text, {\n        gray2: true\n      }, \"Newsletter\"), React.createElement(Switch, {\n        value: this.state.newsletter,\n        onValueChange: function onValueChange(value) {\n          return _this3.setState({\n            newsletter: value\n          });\n        }\n      })))));\n    }\n  }]);\n\n  return Settings;\n}(Component);\n\nSettings.defaultProps = {\n  profile: mocks.profile\n};\nexport default Settings;\nvar styles = StyleSheet.create({\n  header: {\n    paddingHorizontal: theme.sizes.base * 2\n  },\n  avatar: {\n    height: theme.sizes.base * 2.2,\n    width: theme.sizes.base * 2.2\n  },\n  inputs: {\n    marginTop: theme.sizes.base * 0.7,\n    paddingHorizontal: theme.sizes.base * 2\n  },\n  inputRow: {\n    alignItems: \"flex-end\"\n  },\n  sliders: {\n    marginTop: theme.sizes.base * 0.7,\n    paddingHorizontal: theme.sizes.base * 2\n  },\n  thumb: {\n    width: theme.sizes.base,\n    height: theme.sizes.base,\n    borderRadius: theme.sizes.base,\n    borderColor: \"white\",\n    borderWidth: 3,\n    backgroundColor: theme.colors.secondary\n  },\n  toggles: {\n    paddingHorizontal: theme.sizes.base * 2\n  }\n});","map":{"version":3,"sources":["/Users/pupmega/codefellows/onewiththeplants/screens/Settings.js"],"names":["React","Component","Slider","Divider","Button","Block","Text","Switch","theme","mocks","Settings","state","budget","monthly","notifications","newsletter","editing","profile","setState","props","name","text","handleEdit","styles","header","avatar","inputs","inputRow","marginBottom","renderEdit","toggleEdit","email","sizes","base","sliders","plants","funds","toggles","value","defaultProps","StyleSheet","create","paddingHorizontal","height","width","marginTop","alignItems","thumb","borderRadius","borderColor","borderWidth","backgroundColor","colors","secondary"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Image, StyleSheet, ScrollView, TextInput } from \"react-native\";\nimport Slider from \"react-native-slider\";\n\nimport { Divider, Button, Block, Text, Switch } from \"../components\";\nimport { theme, mocks } from \"../constants\";\n\nclass Settings extends Component {\n    state = {\n        budget: 850,\n        monthly: 1700,\n        notifications: true,\n        newsletter: false,\n        editing: null,\n        profile: {}\n    };\n\n    componentDidMount() {\n        this.setState({ profile: this.props.profile });\n    }\n\n    handleEdit(name, text) {\n        const { profile } = this.state;\n        profile[name] = text;\n\n        this.setState({ profile });\n    }\n\n    toggleEdit(name) {\n        const { editing } = this.state;\n        this.setState({ editing: !editing ? name : null });\n    }\n\n    renderEdit(name) {\n        const { profile, editing } = this.state;\n\n        if (editing === name) {\n            return (\n                <TextInput\n                    defaultValue={profile[name]}\n                    onChangeText={text => this.handleEdit([name], text)}\n                />\n            );\n        }\n\n        return <Text bold>{profile[name]}</Text>;\n    }\n\n    render() {\n        const { profile, editing } = this.state;\n\n        return (\n            <Block>\n                <Block flex={false} row center space=\"between\" style={styles.header}>\n                    <Text h1 bold>\n                        Settings\n          </Text>\n                    <Button>\n                        <Image source={profile.avatar} style={styles.avatar} />\n                    </Button>\n                </Block>\n\n                <ScrollView showsVerticalScrollIndicator={false}>\n                    <Block style={styles.inputs}>\n                        <Block row space=\"between\" margin={[10, 0]} style={styles.inputRow}>\n                            <Block>\n                                <Text gray2 style={{ marginBottom: 10 }}>\n                                    Username\n                </Text>\n                                {this.renderEdit(\"username\")}\n                            </Block>\n                            <Text\n                                medium\n                                secondary\n                                onPress={() => this.toggleEdit(\"username\")}\n                            >\n                                {editing === \"username\" ? \"Save\" : \"Edit\"}\n                            </Text>\n                        </Block>\n                        <Block row space=\"between\" margin={[10, 0]} style={styles.inputRow}>\n                            <Block>\n                                <Text gray2 style={{ marginBottom: 10 }}>\n                                    Location\n                </Text>\n                                {this.renderEdit(\"location\")}\n                            </Block>\n                            <Text\n                                medium\n                                secondary\n                                onPress={() => this.toggleEdit(\"location\")}\n                            >\n                                {editing === \"location\" ? \"Save\" : \"Edit\"}\n                            </Text>\n                        </Block>\n                        <Block row space=\"between\" margin={[10, 0]} style={styles.inputRow}>\n                            <Block>\n                                <Text gray2 style={{ marginBottom: 10 }}>\n                                    E-mail\n                </Text>\n                                <Text bold>{profile.email}</Text>\n                            </Block>\n                        </Block>\n                    </Block>\n\n                    <Divider margin={[theme.sizes.base, theme.sizes.base * 2]} />\n\n                    <Block style={styles.sliders}>\n                        <Block>\n\n                            <Text gray2>Plants</Text>\n                            <Text caption gray2 right>{profile.plants}</Text>\n\n                        </Block>\n                        <Block>\n                            <Text gray2 style={{ marginBottom: 10 }}>Plant Cash</Text>\n                            <Text bold>${profile.funds}</Text>\n                        </Block>\n                    </Block>\n\n\n\n                    <Divider />\n\n                    <Block style={styles.toggles}>\n                        <Block\n                            row\n                            center\n                            space=\"between\"\n                            style={{ marginBottom: theme.sizes.base * 2 }}\n                        >\n                            <Text gray2>Notifications</Text>\n                            <Switch\n                                value={this.state.notifications}\n                                onValueChange={value => this.setState({ notifications: value })}\n                            />\n                        </Block>\n\n                        <Block\n                            row\n                            center\n                            space=\"between\"\n                            style={{ marginBottom: theme.sizes.base * 2 }}\n                        >\n                            <Text gray2>Newsletter</Text>\n                            <Switch\n                                value={this.state.newsletter}\n                                onValueChange={value => this.setState({ newsletter: value })}\n                            />\n                        </Block>\n                    </Block>\n                </ScrollView>\n            </Block>\n        );\n    }\n}\n\nSettings.defaultProps = {\n    profile: mocks.profile\n};\n\nexport default Settings;\n\nconst styles = StyleSheet.create({\n    header: {\n        paddingHorizontal: theme.sizes.base * 2\n    },\n    avatar: {\n        height: theme.sizes.base * 2.2,\n        width: theme.sizes.base * 2.2\n    },\n    inputs: {\n        marginTop: theme.sizes.base * 0.7,\n        paddingHorizontal: theme.sizes.base * 2\n    },\n    inputRow: {\n        alignItems: \"flex-end\"\n    },\n    sliders: {\n        marginTop: theme.sizes.base * 0.7,\n        paddingHorizontal: theme.sizes.base * 2\n    },\n    thumb: {\n        width: theme.sizes.base,\n        height: theme.sizes.base,\n        borderRadius: theme.sizes.base,\n        borderColor: \"white\",\n        borderWidth: 3,\n        backgroundColor: theme.colors.secondary\n    },\n    toggles: {\n        paddingHorizontal: theme.sizes.base * 2\n    }\n});"]},"metadata":{},"sourceType":"module"}
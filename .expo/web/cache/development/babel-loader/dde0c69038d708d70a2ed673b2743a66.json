{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/pupmega/codefellows/onewiththeplants/screens/Collection.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Card, Badge, Button, Block, Text } from \"../components\";\nimport { theme, mocks } from \"../constants\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width;\n\nvar Browse = function (_Component) {\n  _inherits(Browse, _Component);\n\n  var _super = _createSuper(Browse);\n\n  function Browse() {\n    var _this;\n\n    _classCallCheck(this, Browse);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      active: \"Everything\",\n      categories: []\n    };\n\n    _this.handleTab = function (tab) {\n      var categories = _this.props.categories;\n      var filtered = categories.filter(function (category) {\n        return category.tags.includes(tab.toLowerCase());\n      });\n\n      _this.setState({\n        active: tab,\n        categories: filtered\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Browse, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        categories: this.props.categories\n      });\n    }\n  }, {\n    key: \"renderTab\",\n    value: function renderTab(tab) {\n      var _this2 = this;\n\n      var active = this.state.active;\n      var isActive = active === tab;\n      return React.createElement(TouchableOpacity, {\n        key: \"tab-\" + tab,\n        onPress: function onPress() {\n          return _this2.handleTab(tab);\n        },\n        style: [styles.tab, isActive ? styles.active : null]\n      }, React.createElement(Text, {\n        size: 16,\n        medium: true,\n        gray: !isActive,\n        secondary: isActive\n      }, tab));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          profile = _this$props.profile,\n          navigation = _this$props.navigation;\n      var categories = this.state.categories;\n      var tabs = ['Everything', 'Terrarium', 'Minigames', 'Shop'];\n      return React.createElement(Block, null, React.createElement(Block, {\n        flex: false,\n        row: true,\n        center: true,\n        space: \"between\",\n        style: styles.header\n      }, React.createElement(Text, {\n        h1: true,\n        bold: true\n      }, \"My Garden\"), React.createElement(Button, {\n        onPress: function onPress() {\n          return navigation.navigate(\"Settings\");\n        }\n      }, React.createElement(Image, {\n        source: profile.avatar,\n        style: styles.avatar\n      }))), React.createElement(Block, {\n        flex: false,\n        row: true,\n        style: styles.tabs\n      }, tabs.map(function (tab) {\n        return _this3.renderTab(tab);\n      })), React.createElement(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        style: {\n          paddingVertical: theme.sizes.base * 2\n        }\n      }, React.createElement(Block, {\n        flex: false,\n        row: true,\n        space: \"between\",\n        style: styles.categories\n      }, categories.map(function (category) {\n        return React.createElement(TouchableOpacity, {\n          key: category.name,\n          onPress: function onPress() {\n            return navigation.navigate(\"Explore\", {\n              category: category\n            });\n          }\n        }, React.createElement(Card, {\n          center: true,\n          middle: true,\n          shadow: true,\n          style: styles.category\n        }, React.createElement(Badge, {\n          margin: [0, 0, 15],\n          size: 50,\n          color: \"rgba(41,216,143,0.20)\"\n        }, React.createElement(Image, {\n          source: category.image\n        })), React.createElement(Text, {\n          medium: true,\n          height: 20\n        }, category.name), React.createElement(Text, {\n          gray: true,\n          caption: true\n        }, category.description)));\n      }))));\n    }\n  }]);\n\n  return Browse;\n}(Component);\n\nBrowse.defaultProps = {\n  profile: mocks.profile,\n  categories: mocks.categories\n};\nexport default Browse;\nvar styles = StyleSheet.create({\n  header: {\n    paddingHorizontal: theme.sizes.base * 2\n  },\n  avatar: {\n    height: theme.sizes.base * 3.2,\n    width: theme.sizes.base * 3.2,\n    backgroundColor: 'transparent'\n  },\n  tabs: {\n    borderBottomColor: theme.colors.gray2,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    marginVertical: theme.sizes.base,\n    marginHorizontal: theme.sizes.base * 2\n  },\n  tab: {\n    marginRight: theme.sizes.base * 2,\n    paddingBottom: theme.sizes.base\n  },\n  active: {\n    borderBottomColor: theme.colors.secondary,\n    borderBottomWidth: 3\n  },\n  categories: {\n    flexWrap: \"wrap\",\n    paddingHorizontal: theme.sizes.base * 2,\n    marginBottom: theme.sizes.base * 3.5\n  },\n  category: {\n    minWidth: (width - theme.sizes.padding * 2.4 - theme.sizes.base) / 2,\n    maxWidth: (width - theme.sizes.padding * 2.4 - theme.sizes.base) / 2,\n    maxHeight: (width - theme.sizes.padding * 2.4 - theme.sizes.base) / 2\n  }\n});","map":{"version":3,"sources":["/Users/pupmega/codefellows/onewiththeplants/screens/Collection.js"],"names":["React","Component","Card","Badge","Button","Block","Text","theme","mocks","Dimensions","get","width","Browse","state","active","categories","handleTab","tab","props","filtered","filter","category","tags","includes","toLowerCase","setState","isActive","styles","profile","navigation","tabs","header","navigate","avatar","map","renderTab","paddingVertical","sizes","base","name","image","description","defaultProps","StyleSheet","create","paddingHorizontal","height","backgroundColor","borderBottomColor","colors","gray2","borderBottomWidth","hairlineWidth","marginVertical","marginHorizontal","marginRight","paddingBottom","secondary","flexWrap","marginBottom","minWidth","padding","maxWidth","maxHeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Dimensions,\n  Image,\n  StyleSheet,\n  ScrollView,\n  TouchableOpacity\n} from \"react-native\";\n\nimport { Card, Badge, Button, Block, Text } from \"../components\";\nimport { theme, mocks } from \"../constants\";\n\nconst { width } = Dimensions.get(\"window\");\n\nclass Browse extends Component {\n  state = {\n    active: \"Everything\",\n    categories: []\n  };\n\n  componentDidMount() {\n    this.setState({ categories: this.props.categories });\n  }\n\n  handleTab = tab => {\n    const { categories } = this.props;\n    const filtered = categories.filter(category =>\n      category.tags.includes(tab.toLowerCase())\n    );\n\n    this.setState({ active: tab, categories: filtered });\n  };\n\n  renderTab(tab) {\n    const { active } = this.state;\n    const isActive = active === tab;\n\n    return (\n      <TouchableOpacity\n        key={`tab-${tab}`}\n        onPress={() => this.handleTab(tab)}\n        style={[styles.tab, isActive ? styles.active : null]}\n      >\n        <Text size={16} medium gray={!isActive} secondary={isActive}>\n          {tab}\n        </Text>\n      </TouchableOpacity>\n    );\n  }\n\n  render() {\n    const { profile, navigation } = this.props;\n    const { categories } = this.state;\n    const tabs = ['Everything', 'Terrarium', 'Minigames', 'Shop'];\n\n\n    return (\n      <Block>\n        <Block flex={false} row center space=\"between\" style={styles.header}>\n          <Text h1 bold>\n            My Garden\n          </Text>\n          <Button onPress={() => navigation.navigate(\"Settings\")}>\n            <Image source={profile.avatar} style={styles.avatar} />\n          </Button>\n        </Block>\n\n        <Block flex={false} row style={styles.tabs}>\n          {tabs.map(tab => this.renderTab(tab))}\n        </Block>\n\n        <ScrollView\n          showsVerticalScrollIndicator={false}\n          style={{ paddingVertical: theme.sizes.base * 2 }}\n        >\n          <Block flex={false} row space=\"between\" style={styles.categories}>\n            {categories.map(category => (\n              <TouchableOpacity\n                key={category.name}\n                onPress={() => navigation.navigate(\"Explore\", { category })}\n              >\n                <Card center middle shadow style={styles.category}>\n                  <Badge\n                    margin={[0, 0, 15]}\n                    size={50}\n                    color=\"rgba(41,216,143,0.20)\"\n                  >\n                    <Image source={category.image} />\n                  </Badge>\n                  <Text medium height={20}>\n                    {category.name}\n                  </Text>\n                  <Text gray caption>\n                    {category.description} \n                  </Text>\n                </Card>\n              </TouchableOpacity>\n            ))}\n          </Block>\n        </ScrollView>\n      </Block>\n    );\n  }\n}\n\nBrowse.defaultProps = {\n  profile: mocks.profile,\n  categories: mocks.categories\n};\n\nexport default Browse;\n\nconst styles = StyleSheet.create({\n  header: {\n    paddingHorizontal: theme.sizes.base * 2\n  },\n  avatar: {\n    height: theme.sizes.base * 3.2,\n    width: theme.sizes.base * 3.2,\n    backgroundColor: 'transparent',\n  },\n  tabs: {\n    borderBottomColor: theme.colors.gray2,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    marginVertical: theme.sizes.base,\n    marginHorizontal: theme.sizes.base * 2\n  },\n  tab: {\n    marginRight: theme.sizes.base * 2,\n    paddingBottom: theme.sizes.base\n  },\n  active: {\n    borderBottomColor: theme.colors.secondary,\n    borderBottomWidth: 3\n  },\n  categories: {\n    flexWrap: \"wrap\",\n    paddingHorizontal: theme.sizes.base * 2,\n    marginBottom: theme.sizes.base * 3.5\n  },\n  category: {\n    // this should be dynamic based on screen width\n    minWidth: (width - theme.sizes.padding * 2.4 - theme.sizes.base) / 2,\n    maxWidth: (width - theme.sizes.padding * 2.4 - theme.sizes.base) / 2,\n    maxHeight: (width - theme.sizes.padding * 2.4 - theme.sizes.base) / 2\n  }\n});"]},"metadata":{},"sourceType":"module"}